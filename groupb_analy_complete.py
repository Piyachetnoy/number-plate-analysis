# -*- coding: utf-8 -*-
"""GroupB_analy_complete.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1exD8NfgI3R-o5gxEa-aFcGM3EXBtx5FI
"""

!pip install japanize-matplotlib #日本語を使えるようにする
# ライブラリのインポート
import pandas as pd
import matplotlib.pyplot as plt
import japanize_matplotlib
import seaborn as sns
import os

# CSVファイルの読み取り
from google.colab import drive
drive.mount('/content/drive')

file_path = 'drive/MyDrive/Intern_GroupB/GroupB_analy_data1.csv'
file_path2 = 'drive/MyDrive/Intern_GroupB/GroupB_analy_data2.csv'

# ファイルの存在確認
#1
if not os.path.exists(file_path):
    print(f"ファイルが見つかりません: {file_path}")
else:
    df = pd.read_csv(file_path)
#2
if not os.path.exists(file_path2):
    print(f"ファイルが見つかりません: {file_path2}")
else:
    df2 = pd.read_csv(file_path2)

#UIぽいもの（なくても良いかも,flaskで代用できる???）
#@markdown ### データ解析開始日と、終了日を選択してください
date_start = '2024-08-01' #@param {type:"date"}
date_finish = '2024-08-14' #@param {type:"date"}

#日付をdatetime型に変換 ⇐ 参考文献真似したけど、なんでこれをするのか謎
df['date'] = pd.to_datetime(df['date'])
date_start = pd.to_datetime(date_start)
date_finish = pd.to_datetime(date_finish)

#日付でデータをフィルタリング
df = df[(df['date'] >= date_start) & (df['date'] <= date_finish)]

#UIぽいもの（なくても良いかも、flaskで代用できる???）
#@markdown ### 地域別か、都道府県別で選んでください
situation = '都道府県別' #@param ["地域別", "都道府県別"] {allow-input: true}

if(situation == "地域別"):
  # 地域をカウントする関数
  def region_counted(df):
    region_counts = df['region'].value_counts()
    sorted_regions = pd.DataFrame({'region':region_counts.index,'count':region_counts.values})
    return sorted_regions

  #棒グラフ
  sorted_regions = region_counted(df)
  plt.bar(sorted_regions['region'], sorted_regions['count'])
  plt.xlabel('地域')
  plt.ylabel('回数')
  plt.grid(axis = 'y')
  plt.title('地域別統計')

  #jpegに変換！かも
  plt.savefig('drive/MyDrive/Intern_GroupB/graph.jpg', format='jpeg')

  plt.show()

  #jpegに変換！かも
  plt.savefig('drive/MyDrive/Intern_GroupB/graph.jpg', format='jpeg')

else:
  #都道府県割り当て
  df3 = pd.merge(df, df2, on='region')

  #都道府県をカウントする関数
  def prefecture_counted(df3):
    prefecture_counts = df3['prefecture'].value_counts()
    sorted_prefectures = pd.DataFrame({'prefecture':prefecture_counts.index,'count':prefecture_counts.values})
    return sorted_prefectures

  #日付ごとにグループ化して都道府県をカウントする

  #棒グラフ
  sorted_prefectures = prefecture_counted(df3)
  plt.bar(sorted_prefectures['prefecture'], sorted_prefectures['count'])
  plt.xlabel('都道府県')
  plt.ylabel('回数')
  plt.grid(axis = 'y')
  plt.title('都道府県別統計')

  #jpegに変換！かも
  plt.savefig('drive/MyDrive/Intern_GroupB/graph.jpg', format='jpeg')

  plt.show()